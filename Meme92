from flask import Flask, request, jsonify
import base64
import json
import datetime
import os
import requests

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = "8039861900:AAF2T_ZLgxgGzBkiDQM08wSZ7uxVo8w7bnI"  
TELEGRAM_CHAT_ID = "8013195957"  

def send_telegram_alert(visitor_data):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram"""
    try:
        message = f"""
üîç –ù–û–í–û–ï –û–¢–ö–†–´–¢–ò–ï PDF
üïê –í—Ä–µ–º—è: {visitor_data.get('time', 'N/A')}
üåê IP: {visitor_data.get('ip', 'N/A')}
üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {visitor_data.get('platform', 'N/A')}
üîç User Agent: {visitor_data.get('userAgent', 'N/A')}
        """
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": message
        }
        
        requests.post(url, json=data, timeout=10)
    except Exception as e:
        print(f"Telegram error: {e}")

@app.route('/track', methods=['GET', 'POST'])
def track_visitor():
    """–û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    try:
        if request.method == 'GET':
            encoded_data = request.args.get('data', '')
        else:
            encoded_data = request.form.get('info', '')
        
        if encoded_data:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            decoded_data = base64.b64decode(encoded_data).decode('utf-8')
            visitor_info = json.loads(decoded_data)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
            print("=" * 50)
            print(f"–ù–û–í–´–ô –ü–û–°–ï–¢–ò–¢–ï–õ–¨ PDF:")
            for key, value in visitor_info.items():
                print(f"{key}: {value}")
            print("=" * 50)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            send_telegram_alert(visitor_info)
            
    except Exception as e:
        print(f"Tracking error: {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
    return '', 200

@app.route('/')
def home():
    return 'PDF Tracker Active'

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)
