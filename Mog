from flask import Flask, request, jsonify
import base64
import json
import datetime
import os
import requests

app = Flask(__name__)

# –¢–≤–æ–π Telegram –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
TELEGRAM_BOT_TOKEN = "8422712012:AAFPoXa2PTXfRmr78Ya-lK5gaTmlSP8aCWk"
TELEGRAM_CHAT_ID = "8013195957"

def send_telegram_alert(visitor_data):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram"""
    try:
        message = f"""
üîç –ù–û–í–´–ô –í–•–û–î
üïê –í—Ä–µ–º—è: {visitor_data.get('time', 'N/A')}
üåê IP: {visitor_data.get('ip', 'N/A')}
üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {visitor_data.get('platform', 'N/A')}
üñ•Ô∏è –≠–∫—Ä–∞–Ω: {visitor_data.get('screen', 'N/A')}
üåç –Ø–∑—ã–∫–∏: {visitor_data.get('languages', 'N/A')}
üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {visitor_data.get('timezone', 'N/A')}
        """
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": message,
            "parse_mode": "HTML"
        }
        
        requests.post(url, json=data, timeout=10)
    except Exception as e:
        print(f"Telegram error: {e}")

@app.route('/track', methods=['GET', 'POST'])
def track_visitor():
    """–û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    try:
        if request.method == 'GET':
            encoded_data = request.args.get('data', '')
        else:
            encoded_data = request.form.get('info', '')
        
        if encoded_data:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            decoded_data = base64.b64decode(encoded_data).decode('utf-8')
            visitor_info = json.loads(decoded_data)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
            print("=" * 50)
            print(f"–ù–û–í–´–ô –ü–û–°–ï–¢–ò–¢–ï–õ–¨:")
            for key, value in visitor_info.items():
                print(f"{key}: {value}")
            print("=" * 50)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            with open('visitors_log.txt', 'a', encoding='utf-8') as f:
                f.write(f"\n{datetime.datetime.now()} - {visitor_info}\n")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            send_telegram_alert(visitor_info)
            
    except Exception as e:
        print(f"Tracking error: {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –ø–∏–∫—Å–µ–ª—å —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π
    response = app.response_class(
        response=base64.b64decode(b'R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7'),
        status=200,
        mimetype='image/gif'
    )
    return response

@app.route('/logs')
def view_logs():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è)"""
    try:
        with open('visitors_log.txt', 'r', encoding='utf-8') as f:
            logs = f.read()
        return f'<pre>{logs}</pre>'
    except:
        return '–õ–æ–≥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç'

@app.route('/')
def home():
    return '–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞'

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000) –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—à—å —Ñ–∞–π–ª —á—Ç–æ –∑–¥–µ—Å—å –Ω–∞–¥–æ –∏–∑–º–µ–Ω—è—Ç—å?
